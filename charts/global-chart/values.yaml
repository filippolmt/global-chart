# Default values for global-chart.
# -- Deployment configuration
deployment:
  # -- (bool) Enable/disable the deployment of the application
  enabled: false

  # -- (int) Number of replicas to deploy, default is 2
  replicaCount: 2

  # -- Image configuration
  image:
    # -- Image repository (e.g., nginx)
    repository: ""
    # -- Image pull policy: Always, IfNotPresent, or Never
    pullPolicy: IfNotPresent
    # -- Image tag (e.g., "1.23.3")
    tag: ""

  # -- List of imagePullSecrets for private registries
  imagePullSecrets: []

  # -- Override the chart name
  nameOverride: ""
  # -- Override the chart fullname
  fullnameOverride: ""

  # -- ServiceAccount creation and mounting
  serviceAccount:
    # -- Create a ServiceAccount
    create: true
    # -- Automount the ServiceAccount credentials
    automount: true
    # -- Annotations to add to the ServiceAccount
    annotations: {}
    # -- Use an existing ServiceAccount name
    name: ""

  # -- Pod annotations
  podAnnotations: {}
  # -- Pod labels
  podLabels: {}

  # -- Pod-level security context (e.g., fsGroup)
  podSecurityContext: {}

  # -- Container-level security context (e.g., runAsUser)
  securityContext: {}

  # -- Service that front-ends the Deployment
  service:
    # -- Service port name
    portName: http
    # -- Service type: ClusterIP, NodePort, or LoadBalancer
    type: ClusterIP
    # -- Port exposed by the Service
    port: 80
    # -- Target port on the pod
    targetPort: http
    # -- Protocol for the service port (TCP|UDP)
    protocol: TCP

  # -- Resource requests & limits for pods
  resources:
    requests:
      # -- Memory request
      memory: "64Mi"
      # -- CPU request
      cpu: "100m"

  # -- Liveness probe configuration
  livenessProbe: {}

  # -- Readiness probe configuration
  readinessProbe: {}

  # -- Horizontal Pod Autoscaling configuration
  autoscaling:
    # -- Enable HPA (only when at least one target metric is set)
    enabled: false
    # -- Minimum replicas for HPA
    minReplicas: 2
    # -- Maximum replicas for HPA
    maxReplicas: 10
    # -- Target average CPU utilization (%) (optional)
    targetCPUUtilizationPercentage: ""
    # -- Target average memory utilization (%) (optional)
    targetMemoryUtilizationPercentage: ""
    # -- Optional HPA behavior settings
    behavior:
      # -- scaleUp parameters passed through directly to HPA.behavior.scaleUp
      scaleUp: {}
      # -- scaleDown parameters passed through directly to HPA.behavior.scaleDown
      scaleDown: {}

  # -- Pod volumes: Secret, ConfigMap, PVC, etc.
  volumes: []

  # -- Container volumeMounts for the above volumes
  volumeMounts: []

  # -- Node selector constraints for pod placement
  nodeSelector: {}

  # -- Pod tolerations
  tolerations: []

  # -- Pod affinity/anti-affinity rules
  affinity: {}

  # -- Global Secret key/value for envFrom injection
  secret: {}

  # -- Global ConfigMap key/value for envFrom injection
  configMap: {}

  # -- hostAliases entries for pods
  hostAliases: []

  # -- DNS settings for pods
  dnsConfig:
    # -- Custom nameservers
    nameservers: []
    # -- DNS search domains
    searches: []
    # -- DNS options (name/value)
    options: []

  # -- Import existing ConfigMaps as envFrom
  envFromConfigMaps: []
  # -- Import existing Secrets as envFrom
  envFromSecrets: []
  # -- Additional environment variables
  additionalEnvs: []

  # -- Extra initContainers
  extraInitContainers: []
  # -- Extra sidecar containers
  extraContainers: []

  # -- Recreate pods on config change (with pullPolicy=Always)
  podRecreation:
    enabled: false

  # -- Dynamic ConfigMaps to create from inline content or file bundles
  mountedConfigFiles:
    # -- List of individual config files to create as ConfigMaps
    files: []
    # -- List of config file bundles (multiple files in one ConfigMap)
    bundles: []
# -- Ingress configuration
ingress:
  # -- Enable or disable Ingress
  enabled: false
  # -- IngressClass to use (e.g., nginx)
  className: "nginx"
  # -- Annotations to add to the Ingress
  annotations: {}
  # -- TLS configuration for secure hosts
  tls: []

  # -- Definitions for each host rule
  hosts:
    - host: chart-example.local
      # -- Service backend name (default: chart fullname)
      service:
        name: ""
        # -- Service backend port (default: deployment.service.port)
        port: 0
      # -- HTTP path definitions for this host
      paths:
        - path: /
          pathType: ImplementationSpecific

    # - host: api.example.local
    #   service:
    #     name: my-api-svc
    #     port: 8080
    #   paths:
    #     - path: /v1
    #       pathType: Prefix
    #     - path: /health
    #       pathType: Exact

# -- CronJobs configuration (map of named cronJobs)
cronJobs: {}

# -- Hook jobs for chart lifecycle (install/upgrade)
hooks: {}

# -- ExternalSecrets definitions for secret management
externalSecrets: []
