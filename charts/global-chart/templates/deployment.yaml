{{- if .Values.deployment.enabled }}
{{- $root := . }}
{{- $dep := .Values.deployment }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "global-chart.fullname" $root }}
  labels:
    {{- include "global-chart.labels" $root | nindent 4 }}
spec:
  {{- if not $dep.autoscaling.enabled }}
  replicas: {{ $dep.replicaCount | default 2 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "global-chart.selectorLabels" $root | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") $root | sha256sum }}
        {{- if $dep.podRecreation.enabled }}
        timestamp: "{{ now | date "20060102150405" }}"
        {{- end }}
        {{- with $dep.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "global-chart.labels" $root | nindent 8 }}
        {{- with $dep.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with $dep.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
          {{- if kindIs "string" . }}
        - name: {{ . | quote }}
          {{- else if hasKey . "name" }}
        - name: {{ .name | quote }}
          {{- else }}
          {{ fail "imagePullSecrets must be a list of strings or objects with a 'name' key." }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if $dep.hostAliases }}
      hostAliases:
        {{- toYaml $dep.hostAliases | nindent 8 }}
      {{- end }}
      {{- if or $dep.dnsConfig.nameservers $dep.dnsConfig.searches $dep.dnsConfig.options }}
      dnsConfig:
        {{- if $dep.dnsConfig.nameservers }}
        nameservers:
          {{- range $dep.dnsConfig.nameservers }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if $dep.dnsConfig.searches }}
        searches:
          {{- range $dep.dnsConfig.searches }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if $dep.dnsConfig.options }}
        options:
          {{- range $dep.dnsConfig.options }}
          - name: {{ .name }}
            {{- if .value }}
            value: {{ .value | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ include "global-chart.serviceAccountName" $root }}
      {{- if $dep.podSecurityContext }}
      securityContext:
        {{- toYaml $dep.podSecurityContext | nindent 8 }}
      {{- end }}
      {{- with $dep.extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ include "global-chart.fullname" $root }}
          image: "{{ required "repository is mandatory" $dep.image.repository }}:{{ required "tag image is mandatory" $dep.image.tag }}"
          imagePullPolicy: {{ $dep.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: {{ $dep.service.portName | default "http" }}
              containerPort: {{ $dep.service.port | default 80 }}
              protocol: {{ ($dep.service.protocol | default "TCP") | upper }}
          {{- if $dep.livenessProbe }}
          livenessProbe:
            {{- toYaml $dep.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if $dep.readinessProbe }}
          readinessProbe:
            {{- toYaml $dep.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $dep.startupProbe }}
          startupProbe:
            {{- toYaml $dep.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $dep.resources | nindent 12 }}
          {{- if or $dep.configMap $dep.envFromConfigMaps $dep.secret $dep.envFromSecrets }}
          envFrom:
            {{- if $dep.configMap }}
            - configMapRef:
                name: {{ include "global-chart.fullname" $root | quote }}
            {{- end }}
            {{- range $cm := $dep.envFromConfigMaps }}
            - configMapRef:
                name: {{ $cm | quote }}
            {{- end }}
            {{- if $dep.secret }}
            - secretRef:
                name: {{ include "global-chart.fullname" $root | quote }}
            {{- end }}
            {{- range $sec := $dep.envFromSecrets }}
            - secretRef:
                name: {{ $sec | quote }}
            {{- end }}
          {{- end }}
          {{- if $dep.additionalEnvs }}
          env:
            {{- range $env := $dep.additionalEnvs }}
            - name: {{ $env.name | quote }}
              valueFrom:
                {{- toYaml $env.valueFrom | nindent 16 }}
            {{- end }}
          {{- end }}
          {{- with $dep.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with $dep.volumes }}
      volumes:
        {{- range . }}
        - name: {{ .name }}
          {{- if eq .type "emptyDir" }}
          emptyDir: {}
          {{- end }}
          {{- if eq .type "configMap" }}
          configMap:
            name: {{ .configMap.name | quote }}
          {{- end }}
          {{- if eq .type "secret" }}
          secret:
            secretName: {{ default .secret.secretName .secret.name | quote }}
          {{- end }}
          {{- if eq .type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ default .persistentVolumeClaim.claimName .persistentVolumeClaim.name | quote }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- with $dep.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $dep.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $dep.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
