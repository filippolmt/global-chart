{{- if .Values.hooks }}
{{- $root := . }}
{{- range $hookType, $jobs := .Values.hooks }}
  {{- range $name, $command := $jobs }}
    {{- if $command }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "global-chart.hookfullname" (merge (dict "hookname" $hookType "jobname" $name) $root) }}
  labels:
    {{- include "global-chart.labels" $root | nindent 4 }}
  annotations:
    "helm.sh/hook": {{ $hookType | quote }}
    "helm.sh/hook-weight": {{ default "10" $command.weight | quote }}
    "helm.sh/hook-delete-policy": {{ default "before-hook-creation" $command.deletePolicy | quote }}
spec:
  template:
    metadata:
      name: {{ template "global-chart.hookfullname" (merge (dict "hookname" $hookType "jobname" $name) $root) }}
      labels:
        {{- include "global-chart.labels" $root | nindent 8 }}
    spec:
      {{- if or $root.Values.deployment.serviceAccount.name $command.serviceAccountName }}
      serviceAccountName: {{ coalesce $command.serviceAccountName $root.Values.deployment.serviceAccount.name | quote }}
      {{- end }}
      {{- with $root.Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- range . }}
          {{- if kindIs "string" . }}
        - name: {{ . | quote }}
          {{- else if hasKey . "name" }}
        - name: {{ .name | quote }}
          {{- else }}
          {{- fail "imagePullSecrets must be a list of strings or objects with a 'name' key." }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if $root.Values.deployment.hostAliases }}
      hostAliases:
        {{- toYaml $root.Values.deployment.hostAliases | nindent 8 }}
      {{- end }}
      {{- if or $root.Values.deployment.dnsConfig.nameservers $root.Values.deployment.dnsConfig.searches $root.Values.deployment.dnsConfig.options }}
      dnsConfig:
        {{- if $root.Values.deployment.dnsConfig.nameservers }}
        nameservers:
          {{- range $root.Values.deployment.dnsConfig.nameservers }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if $root.Values.deployment.dnsConfig.searches }}
        searches:
          {{- range $root.Values.deployment.dnsConfig.searches }}
          - {{ . }}
          {{- end }}
        {{- end }}
        {{- if $root.Values.deployment.dnsConfig.options }}
        options:
          {{- range $root.Values.deployment.dnsConfig.options }}
          - name: {{ .name }}
            {{- if .value }}
            value: {{ .value | quote }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      restartPolicy: {{ default "Never" $command.restartPolicy | quote }}
      containers:
      - name: {{ template "global-chart.hookfullname" (merge (dict "hookname" $hookType "jobname" $name) $root) }}
        image: {{ default (printf "%s:%s" $root.Values.deployment.image.repository $root.Values.deployment.image.tag) $command.image | quote }}
        imagePullPolicy: {{ default "IfNotPresent" $command.imagePullPolicy | quote }}
        {{- if $command.command }}
        command:
          {{- toYaml $command.command | nindent 10 }}
        {{- end }}
        {{- if $command.args }}
        args:
          {{- toYaml $command.args | nindent 10 }}
        {{- end }}
        {{- if or $root.Values.deployment.configMap $root.Values.deployment.envFromConfigMaps $root.Values.deployment.secret $root.Values.deployment.envFromSecrets }}
        envFrom:
          {{- if $root.Values.deployment.configMap }}
          - configMapRef:
              name: {{ template "global-chart.fullname" $root }}
          {{- end }}
          {{- range $cm := $root.Values.deployment.envFromConfigMaps }}
          - configMapRef:
              name: {{ $cm | quote }}
          {{- end }}
          {{- if $root.Values.deployment.secret }}
          - secretRef:
              name: {{ template "global-chart.fullname" $root }}
          {{- end }}
          {{- range $sec := $root.Values.deployment.envFromSecrets }}
          - secretRef:
              name: {{ $sec | quote }}
          {{- end }}
        {{- end }}
        {{- if $root.Values.deployment.additionalEnvs }}
        env:
          {{- range $env := $root.Values.deployment.additionalEnvs }}
          - name: {{ $env.name | quote }}
            valueFrom:
              {{- toYaml $env.valueFrom | nindent 14 }}
          {{- end }}
        {{- end }}
        {{- $inherit := default (dict) $command.inheritFromDeployment -}}
        {{- $inhVM  := (hasKey $inherit "volumeMounts")       | ternary ($inherit.volumeMounts)       true -}}
        {{- $inhV   := (hasKey $inherit "volumes")            | ternary ($inherit.volumes)            true -}}
        {{- $inhMCF := (hasKey $inherit "mountedConfigFiles") | ternary ($inherit.mountedConfigFiles) true -}}
        {{- $dep := dict "volumeMounts" (coalesce $command.volumeMounts (and $inhVM $root.Values.deployment.volumeMounts)) "volumes" (coalesce $command.volumes (and $inhV $root.Values.deployment.volumes)) -}}
        {{- $mountedConfigFiles := and $inhMCF $root.Values.deployment.mountedConfigFiles -}}
        {{- if or $dep.volumeMounts (and $mountedConfigFiles (or $mountedConfigFiles.files $mountedConfigFiles.bundles)) }}
        volumeMounts:
          {{- with $dep.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          {{- if and $mountedConfigFiles $mountedConfigFiles.files }}
          {{- range $i, $f := $mountedConfigFiles.files }}
          - name: md-cm-file-{{ $f.name }}
            mountPath: {{ $f.targetPath }}
            subPath: {{ $f.filename }}
            readOnly: true
          {{- end }}
          {{- end }}
          {{- if and $mountedConfigFiles $mountedConfigFiles.bundles }}
          {{- range $bi, $b := $mountedConfigFiles.bundles }}
          - name: md-cm-bundle-{{ $bi }}
            mountPath: {{ $b.mountDir }}
            readOnly: true
          {{- end }}
          {{- end }}
        {{- end }}
      {{- with $dep.volumes }}
      volumes:
        {{- range . }}
        - name: {{ .name }}
          {{- if eq .type "emptyDir" }}
          emptyDir: {}
          {{- end }}
          {{- if eq .type "configMap" }}
          configMap:
            name: {{ .configMap.name | quote }}
          {{- end }}
          {{- if eq .type "secret" }}
          secret:
            secretName: {{ default .secret.secretName .secret.name | quote }}
          {{- end }}
          {{- if eq .type "persistentVolumeClaim" }}
          persistentVolumeClaim:
            claimName: {{ default .persistentVolumeClaim.claimName .persistentVolumeClaim.name | quote }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if $mountedConfigFiles }}
      {{- if or $mountedConfigFiles.files $mountedConfigFiles.bundles }}
      volumes:
        {{- if $mountedConfigFiles.files }}
        {{- range $i, $f := $mountedConfigFiles.files }}
        - name: md-cm-file-{{ $f.name }}
          configMap:
            name: {{ include "global-chart.fullname" $root }}-md-cm-{{ $f.name }}
        {{- end }}
        {{- end }}
        {{- if $mountedConfigFiles.bundles }}
        {{- range $bi, $b := $mountedConfigFiles.bundles }}
        - name: md-cm-bundle-{{ $bi }}
          projected:
            sources:
            {{- range $fi, $f := $b.files }}
              - configMap:
                  name: {{ include "global-chart.fullname" $root }}-md-cm-{{ $f.name }}
                  items:
                    - key: {{ $f.relPath | base }}
                      path: {{ $f.relPath }}
            {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if or $command.nodeSelector $root.Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml (default $root.Values.deployment.nodeSelector $command.nodeSelector) | nindent 6 }}
      {{- end }}
      {{- if or $command.affinity $root.Values.deployment.affinity }}
      affinity:
        {{- toYaml (default $root.Values.deployment.affinity $command.affinity) | nindent 6 }}
      {{- end }}
      {{- if or $command.tolerations $root.Values.deployment.tolerations }}
      tolerations:
        {{- toYaml (default $root.Values.deployment.tolerations $command.tolerations) | nindent 6 }}
      {{- end }}
    {{- end }}
  {{- end }}
{{- end }}
{{- end }}
