{{- $root := . -}}
{{- range $name, $secret := .Values.externalSecrets }}
{{- if $secret }}
{{- $remote := required (printf "externalSecrets.%s.remote is mandatory" $name) $secret.remote -}}
{{- $secretStore := required (printf "externalSecrets.%s.secretstore is mandatory" $name) $secret.secretstore -}}
{{- $target := default (dict) $secret.target -}}
{{- $secretName := printf "%s-%s" (include "global-chart.fullname" $root) $name -}}
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ $secretName | quote }}
  labels:
    {{- include "global-chart.labels" $root | nindent 4 }}
spec:
  data:
    - remoteRef:
        conversionStrategy: {{ $remote.conversionStrategy | default "Default" | quote }}
        decodingStrategy: {{ $remote.decodingStrategy | default "None" | quote }}
        key: {{ required (printf "externalSecrets.%s.remote.key is mandatory" $name) $remote.key | quote }}
        metadataPolicy: {{ $remote.metadataPolicy | default "None" | quote }}
      secretKey: {{ required "secretkey is mandatory" $secret.secretkey | quote }}
  refreshInterval: {{ $secret.refreshInterval | default "1h" | quote }}
  secretStoreRef:
    kind: {{ required (printf "externalSecrets.%s.secretstore.kind is mandatory" $name) $secretStore.kind | quote }}
    name: {{ required (printf "externalSecrets.%s.secretstore.name is mandatory" $name) $secretStore.name | quote }}
  target:
    creationPolicy: {{ $target.creationPolicy | default "Owner" | quote }}
    deletionPolicy: {{ $target.deletionPolicy | default "Retain" | quote }}
    name: {{ default $secretName $target.name | quote }}
{{ end }}
{{- end }}
