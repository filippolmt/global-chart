{{- if and (.Values.externalSecrets) (.Capabilities.APIVersions.Has "external-secrets.io/v1beta1") }}
{{- if .Values.externalSecrets }}
{{- $dot := . }}
{{- range $name, $secret := .Values.externalSecrets }}
{{- if $secret }}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  # prettier-ignore
  name: {{ printf "%s-%s" (include "global-chart.fullname" $dot) $name | quote }}
  # prettier-ignore
  labels:
    {{- include "global-chart.labels" $dot | nindent 4 }}
spec:
  data:
    - remoteRef:
        conversionStrategy: {{ $secret.remote.conversionStrategy | default "Default" | quote }}
        decodingStrategy: {{ $secret.remote.decodingStrategy | default "None" | quote }}
        key: {{ required "remote key is mandatory" $secret.remote.key | quote }}
        metadataPolicy: {{ $secret.remote.metadataPolicy | default "None" | quote }}
      secretKey: {{ required "secretkey is mandatory" $secret.secretkey | quote }}
  refreshInterval: {{ $secret.refreshInterval | default "1h" | quote }}
  secretStoreRef:
    kind: {{ required "secretstore.kind is mandatory" $secret.secretstore.kind | quote }}
    name: {{ required "secretstore.name is mandatory" $secret.secretstore.name | quote }}
  target:
    {{- if $secret.target }}
    creationPolicy: {{ $secret.target.creationPolicy | quote }}
    deletionPolicy: {{ $secret.target.deletionPolicy | quote }}
    {{- else }}
    creationPolicy: {{ "Owner" | quote }}
    deletionPolicy: {{ "Retain" | quote }}
    {{- end }}
    name: {{ required "The name is mandatory " $name | quote }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
