{{- if .Values.cronJobs }}
{{- $root := . }}
{{- range $name, $job := .Values.cronJobs }}
{{- if $job }}

{{- $inheritRaw := default (dict) $job.inheritFromDeployment -}}
{{- $inherit := (kindIs "map" $inheritRaw) | ternary $inheritRaw (dict) -}}
{{- $inhSA := (hasKey $inherit "serviceAccount") | ternary ($inherit.serviceAccount) true -}}

{{- if and (not $root.Values.deployment.enabled) $inhSA }}
{{- $inhSA = false -}}
{{- end -}}
{{- if not $inhSA }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ coalesce $job.serviceAccountName (printf "%s-%s" (include "global-chart.fullname" $root) $name) }}
  namespace: {{ $root.Release.Namespace | quote }}
  labels:
    {{- include "global-chart.labels" $root | nindent 4 }}
  {{- with $job.serviceAccountAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
automountServiceAccountToken: {{ default true $job.automountServiceAccountToken }}
{{- end }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "global-chart.fullname" $root) $name }}
  {{- if $job.annotations }}
  annotations:
    {{- toYaml $job.annotations | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ default "Forbid" $job.concurrencyPolicy | quote }}
  successfulJobsHistoryLimit: {{ default 2 $job.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 2 $job.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          {{- if $job.initContainers }}
          initContainers:
            {{- toYaml $job.initContainers | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ $name }}
            image: {{ default (printf "%s:%s" $root.Values.deployment.image.repository $root.Values.deployment.image.tag) $job.image | quote }}
            imagePullPolicy: {{ default $root.Values.deployment.image.pullPolicy $job.imagePullPolicy | quote }}
            {{- if $job.command }}
            command:
              {{- toYaml $job.command | nindent 14 }}
            {{- end }}
            {{- if $job.args }}
            args:
              {{- toYaml $job.args | nindent 14 }}
            {{- end }}
            {{- if or $job.envFromConfigMaps $job.envFromSecrets }}
            envFrom:
              {{- range $cm := $job.envFromConfigMaps }}
              - configMapRef:
                  name: {{ $cm | quote }}
              {{- end }}
              {{- range $sec := $job.envFromSecrets }}
              - secretRef:
                  name: {{ $sec | quote }}
              {{- end }}
            {{- end }}
            {{- if $job.resources }}
            resources:
              {{- toYaml $job.resources | nindent 14 }}
            {{- else }}
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
            {{- end }}
            {{- $inheritRaw := default (dict) $job.inheritFromDeployment -}}
            {{- $inherit := (kindIs "map" $inheritRaw) | ternary $inheritRaw (dict) -}}
            {{- $inhVM  := (hasKey $inherit "volumeMounts")       | ternary ($inherit.volumeMounts)       true -}}
            {{- $inhV   := (hasKey $inherit "volumes")            | ternary ($inherit.volumes)            true -}}
            {{- $inhMCF := (hasKey $inherit "mountedConfigFiles") | ternary ($inherit.mountedConfigFiles) true -}}
            {{- $inhVMEff  := and $inhVM  $root.Values.deployment.enabled -}}
            {{- $inhVEff   := and $inhV   $root.Values.deployment.enabled -}}
            {{- $inhMCFEff := and $inhMCF $root.Values.deployment.enabled -}}
            {{- $dep := dict "volumeMounts" (coalesce $job.volumeMounts (and $inhVMEff  $root.Values.deployment.volumeMounts)) "volumes" (coalesce $job.volumes (and $inhVEff $root.Values.deployment.volumes)) -}}
            {{- $mountedConfigFiles := $root.Values.deployment.mountedConfigFiles -}}
            {{- if or $dep.volumeMounts (and $inhMCFEff (or $mountedConfigFiles.files $mountedConfigFiles.bundles)) }}
            volumeMounts:
              {{- with $dep.volumeMounts }}
              {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- if and $inhMCFEff $mountedConfigFiles.files }}
              {{- range $i, $f := $mountedConfigFiles.files }}
              - name: md-cm-file-{{ $f.name }}
                mountPath: {{ $f.targetPath }}
                subPath: {{ $f.filename }}
                readOnly: true
              {{- end }}
              {{- end }}
              {{- if and $inhMCFEff $mountedConfigFiles.bundles }}
              {{- range $bi, $b := $mountedConfigFiles.bundles }}
              - name: md-cm-bundle-{{ $bi }}
                mountPath: {{ $b.mountDir }}
                readOnly: true
              {{- end }}
              {{- end }}
            {{- end }}
          {{- if or $dep.volumes (and $inhMCFEff (or $mountedConfigFiles.files $mountedConfigFiles.bundles)) }}
          volumes:
            {{- with $dep.volumes }}
            {{- range . }}
            - name: {{ .name }}
              {{- if eq .type "emptyDir" }}
              emptyDir: {}
              {{- end }}
              {{- if eq .type "configMap" }}
              configMap:
                name: {{ .configMap.name | quote }}
              {{- end }}
              {{- if eq .type "secret" }}
              secret:
                secretName: {{ default .secret.secretName .secret.name | quote }}
              {{- end }}
              {{- if eq .type "persistentVolumeClaim" }}
              persistentVolumeClaim:
                claimName: {{ default .persistentVolumeClaim.claimName .persistentVolumeClaim.name | quote }}
              {{- end }}
            {{- end }}
            {{- end }}
            {{- if and $inhMCFEff $mountedConfigFiles.files }}
            {{- range $i, $f := $mountedConfigFiles.files }}
            - name: md-cm-file-{{ $f.name }}
              configMap:
                name: {{ include "global-chart.fullname" $root }}-md-cm-{{ $f.name }}
            {{- end }}
            {{- end }}
            {{- if and $inhMCFEff $mountedConfigFiles.bundles }}
            {{- range $bi, $b := $mountedConfigFiles.bundles }}
            - name: md-cm-bundle-{{ $bi }}
              projected:
                sources:
                {{- range $fi, $f := $b.files }}
                  - configMap:
                      name: {{ include "global-chart.fullname" $root }}-md-cm-{{ $f.name }}
                      items:
                        - key: {{ $f.relPath | base }}
                          path: {{ $f.relPath }}
                {{- end }}
            {{- end }}
            {{- end }}
          {{- end }}
          serviceAccountName: {{ if $inhSA }}{{ include "global-chart.serviceAccountName" $root | quote }}{{ else }}{{ coalesce $job.serviceAccountName (printf "%s-%s" (include "global-chart.fullname" $root) $name) | quote }}{{ end }}
          {{- if or $job.nodeSelector $root.Values.deployment.nodeSelector }}
          nodeSelector:
            {{- toYaml (default $root.Values.deployment.nodeSelector $job.nodeSelector) | nindent 12 }}
          {{- end }}
          {{- if or $job.affinity $root.Values.deployment.affinity }}
          affinity:
            {{- toYaml (default $root.Values.deployment.affinity $job.affinity) | nindent 12 }}
          {{- end }}
          {{- if or $job.tolerations $root.Values.deployment.tolerations }}
          tolerations:
            {{- toYaml (default $root.Values.deployment.tolerations $job.tolerations) | nindent 12 }}
          {{- end }}
          restartPolicy: {{ default "Never" $job.restartPolicy | quote }}
{{- end }}
{{- end }}
{{- end }}
