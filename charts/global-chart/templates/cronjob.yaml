{{- if .Values.cronJobs }}
{{- $root := . }}
{{- range $name, $job := .Values.cronJobs }}
{{- if $job }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "global-chart.fullname" $root) $name | quote }}
spec:
  schedule: {{ $job.schedule | quote }}
  successfulJobsHistoryLimit: {{ $job.successfulJobsHistoryLimit | default 2 }}
  failedJobsHistoryLimit: {{ $job.failedJobsHistoryLimit | default 2 }}
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          {{- if $job.initContainers }}
          initContainers:
            {{- toYaml $job.initContainers | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ $name }}
            {{- if $job.image }}
            image: {{ $job.image }}
            imagePullPolicy: {{ $job.imagePullPolicy | default "Always" }}
            {{- else }}
            image: "{{ $root.Values.deployment.image.repository }}:{{ $root.Values.deployment.image.tag }}"
            imagePullPolicy: {{ $root.Values.deployment.image.pullPolicy | default "Always" }}
            {{- end }}
            {{- if $job.command }}
            command:
              {{- toYaml $job.command | nindent 14 }}
            {{- end }}
            {{- if $job.args }}
            args:
              {{- toYaml $job.args | nindent 14 }}
            {{- end }}
            {{- with $root.Values.deployment.volumeMounts }}
            volumeMounts:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- if or $job.envFromConfigMaps $job.envFromSecrets }}
            envFrom:
              {{- range $cm := $job.envFromConfigMaps }}
              - configMapRef:
                  name: {{ $cm | quote }}
              {{- end }}
              {{- range $sec := $job.envFromSecrets }}
              - secretRef:
                  name: {{ $sec | quote }}
              {{- end }}
            {{- end }}
            {{- if $job.resources }}
            resources:
              {{- toYaml $job.resources | nindent 14 }}
            {{- else }}
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
            {{- end }}
          {{- with $root.Values.deployment.volumes }}
          volumes:
            {{- range . }}
            - name: {{ .name }}
              {{- if eq .type "emptyDir" }}
              emptyDir: {}
              {{- end }}
              {{- if eq .type "configMap" }}
              configMap:
                name: {{ .configMap.name | quote }}
              {{- end }}
              {{- if eq .type "secret" }}
              secret:
                secretName: {{ default .secret.secretName .secret.name | quote }}
              {{- end }}
              {{- if eq .type "persistentVolumeClaim" }}
              persistentVolumeClaim:
                claimName: {{ default .persistentVolumeClaim.claimName .persistentVolumeClaim.name | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if or $job.serviceAccountName $root.Values.deployment.serviceAccount.create }}
          serviceAccountName: {{ $job.serviceAccountName | default (printf "%s-%s" (include "global-chart.fullname" $root) $name) | quote }}
          {{- end }}
          restartPolicy: Never
          {{- with $job.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $job.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $job.tolerations }}
          tolerations:
            {{- toYaml $job.tolerations | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}
{{- end }}
