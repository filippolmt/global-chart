{{- if .Values.cronJobs }}
{{- $root := . }}
{{- range $name, $job := .Values.cronJobs }}
{{- if $job }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-%s" (include "global-chart.fullname" $root) $name }}
  {{- if $job.annotations }}
  annotations:
    {{- toYaml $job.annotations | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ $job.schedule | quote }}
  concurrencyPolicy: {{ default "Forbid" $job.concurrencyPolicy | quote }}
  successfulJobsHistoryLimit: {{ default 2 $job.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ default 2 $job.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          {{- if $job.initContainers }}
          initContainers:
            {{- toYaml $job.initContainers | nindent 12 }}
          {{- end }}
          containers:
          - name: {{ $name }}
            image: {{ default (printf "%s:%s" $root.Values.deployment.image.repository $root.Values.deployment.image.tag) $job.image | quote }}
            imagePullPolicy: {{ default $root.Values.deployment.image.pullPolicy $job.imagePullPolicy | quote }}
            {{- if $job.command }}
            command:
              {{- toYaml $job.command | nindent 14 }}
            {{- end }}
            {{- if $job.args }}
            args:
              {{- toYaml $job.args | nindent 14 }}
            {{- end }}
            {{- if or $job.envFromConfigMaps $job.envFromSecrets }}
            envFrom:
              {{- range $cm := $job.envFromConfigMaps }}
              - configMapRef:
                  name: {{ $cm | quote }}
              {{- end }}
              {{- range $sec := $job.envFromSecrets }}
              - secretRef:
                  name: {{ $sec | quote }}
              {{- end }}
            {{- end }}
            {{- if $job.resources }}
            resources:
              {{- toYaml $job.resources | nindent 14 }}
            {{- else }}
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
            {{- end }}
            {{- if $job.volumeMounts }}
            volumeMounts:
              {{- toYaml $job.volumeMounts | nindent 14 }}
            {{- else if and $root.Values.deployment.volumeMounts (gt (len $root.Values.deployment.volumeMounts) 0) }}
            volumeMounts:
              {{- toYaml $root.Values.deployment.volumeMounts | nindent 14 }}
            {{- end }}
          {{- if $job.volumes }}
          volumes:
            {{- range $vol := $job.volumes }}
            - name: {{ $vol.name | quote }}
              {{- if eq $vol.type "emptyDir" }}
              emptyDir: {}
              {{- end }}
              {{- if eq $vol.type "configMap" }}
              configMap:
                name: {{ $vol.configMap.name | quote }}
              {{- end }}
              {{- if eq $vol.type "secret" }}
              secret:
                secretName: {{ default $vol.secret.secretName $vol.secret.name | quote }}
              {{- end }}
              {{- if eq $vol.type "persistentVolumeClaim" }}
              persistentVolumeClaim:
                claimName: {{ default $vol.persistentVolumeClaim.claimName $vol.persistentVolumeClaim.name | quote }}
              {{- end }}
            {{- end }}
          {{- else if and $root.Values.deployment.volumes (gt (len $root.Values.deployment.volumes) 0) }}
          volumes:
            {{- range $vol := $root.Values.deployment.volumes }}
            - name: {{ $vol.name | quote }}
              {{- if eq $vol.type "emptyDir" }}
              emptyDir: {}
              {{- end }}
              {{- if eq $vol.type "configMap" }}
              configMap:
                name: {{ $vol.configMap.name | quote }}
              {{- end }}
              {{- if eq $vol.type "secret" }}
              secret:
                secretName: {{ default $vol.secret.secretName $vol.secret.name | quote }}
              {{- end }}
              {{- if eq $vol.type "persistentVolumeClaim" }}
              persistentVolumeClaim:
                claimName: {{ default $vol.persistentVolumeClaim.claimName $vol.persistentVolumeClaim.name | quote }}
              {{- end }}
            {{- end }}
          {{- end }}
          {{- if or $job.serviceAccountName $root.Values.deployment.serviceAccount.create }}
          serviceAccountName: {{ $job.serviceAccountName | default (printf "%s-%s" (include "global-chart.fullname" $root) $name) | quote }}
          {{- end }}
          {{- if or $job.nodeSelector $root.Values.deployment.nodeSelector }}
          nodeSelector:
            {{- toYaml (default $root.Values.deployment.nodeSelector $job.nodeSelector) | nindent 12 }}
          {{- end }}
          {{- if or $job.affinity $root.Values.deployment.affinity }}
          affinity:
            {{- toYaml (default $root.Values.deployment.affinity $job.affinity) | nindent 12 }}
          {{- end }}
          {{- if or $job.tolerations $root.Values.deployment.tolerations }}
          tolerations:
            {{- toYaml (default $root.Values.deployment.tolerations $job.tolerations) | nindent 12 }}
          {{- end }}
          restartPolicy: {{ default "Never" $job.restartPolicy | quote }}
{{- end }}
{{- end }}
{{- end }}
