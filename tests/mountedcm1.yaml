deployment:
  enabled: true
  image:
    repository: nginx
    tag: "1.27.2"
    pullPolicy: IfNotPresent

  volumes:
    - name: myvolume
      type: secret
      secret:
        secretName: mysql-0-secret
    - name: myvolume2
      type: configMap
      configMap:
        name: mysql-0-config
    - name: myvolume3
      type: persistentVolumeClaim
      persistentVolumeClaim:
        claimName: mypvc
  volumeMounts:
    - name: myvolume
      mountPath: /etc/secret
    - name: myvolume2
      mountPath: /etc/config
    - name: myvolume3
      mountPath: /etc/pvc

  mountedConfigFiles:
    bundles:
      - mountDir: /etc/nginx/conf.d
        files:
          - name: nginx-static
            relPath: default.conf
            content: |
              server {
                listen 80;
                server_name _;

                root /usr/share/nginx/html;
                index index.html;

                location / {
                  try_files $uri $uri/ =404;
                }

                # Healthcheck usato dai probes
                location = /healthz {
                  access_log off;
                  return 200 "healthy\n";
                }

                gzip on;
                gzip_types text/css application/javascript application/json;
              }
          - name: extra-logs
            relPath: log.conf
            content: |
              # esempio di log custom
              log_format minimal '$remote_addr - $status "$request"';
              access_log /var/log/nginx/access.log minimal;
      - mountDir: /tmp/more-nginx
        files:
          - name: more-logs
            relPath: more-logs.conf
            content: |
              # altro esempio di log custom
              log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                              '$status $body_bytes_sent "$http_referer" '
                              '"$http_user_agent" "$http_x_forwarded_for"';
              access_log /var/log/nginx/access.log main;

  service:
    type: ClusterIP
    portName: http
    port: 80
    targetPort: http

  # Probe sullâ€™endpoint di health
  readinessProbe:
    httpGet:
      path: /healthz
      port: 80
    initialDelaySeconds: 2
    periodSeconds: 5
  livenessProbe:
    httpGet:
      path: /healthz
      port: 80
    initialDelaySeconds: 5
    periodSeconds: 10

hooks:
  post-install:
    db-seed-import:
      image: alpine:3.18
      command: ["sh"]
      args: ["-c", 'echo "ciao"']
      imagePullPolicy: Always
      weight: 20
      affinity: &affinity
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/e2e-az-name
                    operator: In
                    values:
                      - e2e-az1
                      - e2e-az2
      tolerations: &tolerations
        - key: "key"
          operator: "Equal"
          value: "value"
          effect: "NoSchedule"
      nodeSelector: &nodeSelector
        kubernetes.io/e2e-az-name: e2e-az1
  pre-upgrade:
    deploy:
      inheritFromDeployment:
        volumeMounts: false
        volumes: true
        mountedConfigFiles: false
        serviceAccount: false
      command: ["sh", "-c"]
      # serviceAccountName: test-mountedcm1-global-chart
      args: ["echo", "ciao"]
      weight: 10
      deletePolicy: before-hook-creation
      imagePullPolicy: Always
    s3fs:
      command: ["bin/sh", "-c"]
      args: ["echo", "ciao"]
      weight: 20
      deletePolicy: before-hook-creation
      imagePullPolicy: Always
  post-upgrade:
    cr: null

cronJobs:
  cron:
    tolerations: []
    annotations: {}
    schedule: "00 12 * * 1-5"
    inheritFromDeployment:
      serviceAccount: false
      volumeMounts: false
      volumes: true
      mountedConfigFiles: false
    serviceAccountName:
    successfulJobsHistoryLimit: 2
    failedJobsHistoryLimit: 2
    args: ["sh", "-c", 'echo "ciao"']
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
    envFromConfigMaps:
      - myconfigmap
      - mongodb-0-config
    envFromSecrets:
      - mysql-0-secret
      - mongodb-0-secret
  testcron:
    schedule: "00 12 * * 1-5"
    command: ["sh", "-c"]
    args: ["echo", "ciao"]
    inheritFromDeployment:
      serviceAccount: false
    # serviceAccountName: test-mountedcm1-global-chart
    affinity: *affinity
    tolerations: *tolerations
    nodeSelector: *nodeSelector
    resources:
      requests:
        cpu: 1000m
        memory: 1280Mi
